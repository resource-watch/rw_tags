{
    "id": "rw_tags_v1",
    "name": "RW Tags v1",
    "tags": ["rw"],
    "urls": [
      {
        "url": "/tags",
        "method": "GET",
        "endpoints": [{
            "method": "GET",
            "baseUrl": "http://localhost:3025",
            "path": "/tags"
        }]
      },
      {
        "url": "/tags/:id",
        "method": "GET",
        "endpoints": [{
            "method": "GET",
            "baseUrl": "http://localhost:3025",
            "path": "/tags/:id"
        }]
      },
      {
        "url": "/tags/:cat/:id",
        "method": "GET",
        "endpoints": [{
            "method": "GET",
            "baseUrl": "http://localhost:3025",
            "path": "/tags/:cat/:id"
        }]
      },
      {
        "url": "/tags",
        "method": "POST",
        "authenticated": true,
        "endpoints": [{
            "method": "POST",
            "baseUrl": "http://localhost:3025",
            "path": "/tags"
        }]
      },
      {
        "url": "/topics",
        "method": "GET",
        "endpoints": [{
            "method": "GET",
            "baseUrl": "http://localhost:3025",
            "path": "/topics"
        }]
      },
      {
        "url": "/topics/:id",
        "method": "GET",
        "endpoints": [{
            "method": "GET",
            "baseUrl": "http://localhost:3025",
            "path": "/topics/:id"
        }]
      },
      {
        "url": "/topics/:cat/:id",
        "method": "GET",
        "endpoints": [{
            "method": "GET",
            "baseUrl": "http://localhost:3025",
            "path": "/topics/:cat/:id"
        }]
      },
      {
        "url": "/topics",
        "method": "POST",
        "authenticated": true,
        "endpoints": [{
            "method": "POST",
            "baseUrl": "http://localhost:3025",
            "path": "/topics"
        }]
      }
    ],
    "swagger": {
      "swagger": "2.0",
      "info": {
        "title": "RW Tags API",
        "description": "Resource Watch - Tags API",
        "version": "1.0.0"
      },
      "host": "ec2-52-23-163-254.compute-1.amazonaws.com",
      "schemes": [
        "http"
      ],
      "produces": [
        "application/json"
      ],
      "paths": {
        "/tags": {
          "get": {
            "description": "Returns all tags",
            "produces": [
              "application/json"
            ],
            "tags": [
              "Tags"
            ],
            "responses": {
              "200": {
                "description": "Tags obtained",
                "schema": {
                  "$ref": "#/definitions/Tags"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          },
          "post": {
            "summary": "Create tags",
            "description": "Create tag",
            "produces": [
              "application/json"
            ],
            "tags": [
              "Tags"
            ],
            "parameters": [
              {
                "name": "tag",
                "in": "body",
                "description": "Tags to save",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/TagsCreate"
                }
              }
            ],
            "responses": {
              "201": {
                "description": "The object created",
                "schema": {
                  "$ref": "#/definitions/CreatedMessage"
                }
              },
              "400": {
                "description": "Validate error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        },
        "/tags/{cat}/{id}": {
          "get": {
            "description": "Returns tags for specific taggable type (datasets, widgets etc..)",
            "produces": [
              "application/json"
            ],
            "tags": [
              "Tags"
            ],
            "parameters": [
              {
                "name": "cat",
                "in": "path",
                "required": true,
                "description": "Show a specific taggable type (datasets, widgets etc..) followed by taggable_id or use find followed by tag id or slug to show a specific tag",
                "type": "string"
              },
              {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "Filter tags on taggable type (datasets, widgets etc..)",
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Tags obtained",
                "schema": {
                  "$ref": "#/definitions/Tags"
                }
              },
              "404": {
                "description": "Tags not found",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        },
        "/topics": {
          "get": {
            "description": "Returns all topics",
            "produces": [
              "application/json"
            ],
            "topics": [
              "Topics"
            ],
            "responses": {
              "200": {
                "description": "Topics obtained",
                "schema": {
                  "$ref": "#/definitions/Topics"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          },
          "post": {
            "summary": "Create topics",
            "description": "Create topic",
            "produces": [
              "application/json"
            ],
            "topics": [
              "Topics"
            ],
            "parameters": [
              {
                "name": "topic",
                "in": "body",
                "description": "Topics to save",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/TopicsCreate"
                }
              }
            ],
            "responses": {
              "201": {
                "description": "The object created",
                "schema": {
                  "$ref": "#/definitions/CreatedMessage"
                }
              },
              "400": {
                "description": "Validate error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        },
        "/topics/{cat}/{id}": {
          "get": {
            "description": "Returns topics for specific topicgable type (datasets, widgets etc..)",
            "produces": [
              "application/json"
            ],
            "topics": [
              "Topics"
            ],
            "parameters": [
              {
                "name": "cat",
                "in": "path",
                "required": true,
                "description": "Show a specific topicgable type (datasets, widgets etc..) followed by topicgable_id or use find followed by topic id or slug to show a specific topic",
                "type": "string"
              },
              {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "Filter topics on topicgable type (datasets, widgets etc..)",
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Topics obtained",
                "schema": {
                  "$ref": "#/definitions/Topics"
                }
              },
              "404": {
                "description": "Topics not found",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      },
      "definitions": {
        "TagsCreate": {
          "type": "object",
          "properties": {
            "tag": {
              "type": "object",
              "properties": {
                "taggable_slug": {
                  "type": "string",
                  "description": "Slug of taggable object"
                },
                "taggabñe_type": {
                  "type": "string",
                  "description": "Model name of taggable object"
                },
                "taggabñe_id": {
                  "type": "string",
                  "description": "UUID of taggable object"
                },
                "tags_list": {
                  "type": "object",
                  "description": "Tag names - sample - ['tag1','tag2']"
                }
              }
            }
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagsArray"
          }
        },
        "TagsArray": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "UUID",
              "description": "Tags id"
            },
            "name": {
              "type": "string",
              "description": "Tag name"
            },
            "taggings_count": {
              "type": "integer",
              "description": "Tagging count"
            }
          }
        },
        "TopicsCreate": {
          "type": "object",
          "properties": {
            "tag": {
              "type": "object",
              "properties": {
                "topicable_slug": {
                  "type": "string",
                  "description": "Slug of topicable object"
                },
                "taggabñe_type": {
                  "type": "string",
                  "description": "Model name of topicable object"
                },
                "taggabñe_id": {
                  "type": "string",
                  "description": "UUID of topicable object"
                },
                "tags_list": {
                  "type": "object",
                  "description": "Topic names - sample - ['tag1','tag2']"
                }
              }
            }
          }
        },
        "Topics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopicsArray"
          }
        },
        "TopicsArray": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "UUID",
              "description": "Topics id"
            },
            "name": {
              "type": "string",
              "description": "Topic name"
            },
            "taggings_count": {
              "type": "integer",
              "description": "Topicging count"
            }
          }
        },
        "CreatedMessage": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "The HTTP status code applicable to this problem, expressed as a string value"
            },
            "error": {
              "type": "string",
              "description": "An application-specific error code, expressed as a string value"
            },
            "exception": {
              "type": "string",
              "description": "A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."
            },
            "traces": {
              "type": "string",
              "description": "A human-readable explanation specific to this occurrence of the problem. Like title, this field's value can be localized"
            }
          }
        }
      }
    }
}
